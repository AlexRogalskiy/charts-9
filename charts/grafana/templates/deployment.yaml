kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "release" . }}
  namespace: {{ template "namespace" . }}
  labels:
    app: grafana
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
        name: {{ template "release" . }}
    spec:
      containers:
        - name: grafana
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --config=/etc/grafana/grafana.ini
          env:
            - name: GF_PATHS_DATA
              value: /data
            - name: GF_AUTH_BASIC_ENABLED
              value: "false"
            - name: GF_AUTH_PROXY_ENABLED
              value: "true"
            - name: GF_AUTH_PROXY_HEADER_NAME
              value: X-Forwarded-User
            - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
              value: Admin
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/
            - name: dashboards
              mountPath: /etc/grafana-dashboards/
            - name: storage
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: {{ template "release" . }}
        - name: dashboards
          configMap:
            name: {{ template "release" . }}-dashboards
        - name: storage
{{- if .Values.storage.disabled }}
          emptyDir: {}
{{- else }}
          persistentVolumeClaim:
            claimName: {{ template "release" . }}
{{- end }}
