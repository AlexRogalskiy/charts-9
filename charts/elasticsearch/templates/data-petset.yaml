kind: PetSet
apiVersion: apps/v1alpha1
metadata:
  name: {{ template "release" . }}-data
  labels:
    app: elasticsearch
    role: data
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  serviceName: {{ template "release" . }}-data
  replicas: {{ .Values.data.replicas }}
  template:
    metadata:
      labels:
        app: elasticsearch
        role: data
        name: {{ template "release" . }}
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      serviceAccount: {{ template "release" . }}
      containers:
        - name: elasticsearch
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
            capabilities:
              add: [ IPC_LOCK ]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_NAME
              value: {{ .Values.cluster.name }}
            - name: DISCOVERY_SERVICE
              value: {{ .Values.service.name }}-discovery
            - name: NODE_MASTER
              value: "false"
            - name: HTTP_ENABLE
              value: "false"
          ports:
            - name: transport
              containerPort: 9300
              protocol: TCP
          volumeMounts:
            - name: storage
              mountPath: /data
            - name: config
              mountPath: /elasticsearch/config/
          resources:
{{ toYaml .Values.data.resources | indent 12 }}
        - name: metrics
          image: {{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9108
              protocol: TCP
          resources:
{{ toYaml .Values.data.metrics.resources | indent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ template "release" . }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        annotations:
          volume.alpha.kubernetes.io/storage-class: {{ .Values.data.storage.class }}
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: {{ .Values.data.storage.size }}
