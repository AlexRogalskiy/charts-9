kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "fullname" . }}-client
  labels:
    app: elasticsearch
    role: client
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.client.replicas }}
  template:
    metadata:
      labels:
        app: elasticsearch
        role: client
        name: {{ template "fullname" . }}
    spec:
      serviceAccount: {{ template "fullname" . }}
      containers:
        - name: elasticsearch
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
            capabilities:
              add: [ IPC_LOCK ]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_NAME
              value: {{ .Values.cluster.name }}
            - name: DISCOVERY_SERVICE
              value: {{ template "fullname" . }}-discovery
            - name: NODE_MASTER
              value: "false"
            - name: NODE_DATA
              value: "false"
            - name: HTTP_ENABLE
              value: "true"
          ports:
            - containerPort: 9200
              name: http
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: storage
          resources:
{{ toYaml .Values.client.resources | indent 12 }}
        - name: metrics
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          ports:
            - containerPort: 9108
              name: metrics
              protocol: TCP
          resources:
{{ toYaml .Values.client.metrics.resources | indent 12 }}
      volumes:
        - name: storage
          emptyDir: {}
